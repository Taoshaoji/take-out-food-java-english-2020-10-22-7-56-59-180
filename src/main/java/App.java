import java.util.*;
import java.util.stream.Stream;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        int originPrice = 0;
        final int DEDUCT = 6;
        int DeductTotal = 0;
        int savingTotal = 0,saleTotal = 0;
        int saving = 0;
        HashMap<Integer, Item> items = new HashMap<>();
        List<Item> all = itemRepository.findAll();
        List<SalesPromotion> salesPromotionList = salesPromotionRepository.findAll();
        SalesPromotion salesPromotion = salesPromotionList.stream()
                .filter(s -> s.getType().equals("50%_DISCOUNT_ON_SPECIFIED_ITEMS")).findFirst().get();
        //半价商品集合
        List<String> relatedItems = salesPromotion.getRelatedItems();

        String result = "============= Order details =============\n";

        for (String input : inputs) {
            String[] itemSplit = input.trim().split("x");
            String id = itemSplit[0].trim();
            int count = Integer.parseInt(itemSplit[1].trim());
            Item item = all.stream().filter(i -> i.getId().equals(id)).findFirst().get();
            items.put(count,item);
            int prices = (int) item.getPrice() * count;
            result += item.getName()+" x "+count + " = " + prices +" yuan\n";
            originPrice += prices;
            for (String relatedItem : relatedItems) {
                if (relatedItem.equals(id)) {
                    savingTotal += prices / 2;
                }
            }

        }
        if (originPrice < 30) {
            return result+= "-----------------------------------\n"+"Total："+originPrice+" yuan\n"+
                    "===================================";
        }
        result += "-----------------------------------\n"+"Promotion used:\n";

        if (savingTotal <= 6){
            result +="满30减6 yuan，saving 6 yuan\n";
            saleTotal = originPrice - 6;
        }else {
            result +="Half price for certain dishes (Braised chicken，Cold noodles)，saving " +savingTotal+ " yuan\n";
            saleTotal = originPrice - savingTotal;
        }

        result +="-----------------------------------\n"+"Total："+saleTotal +" yuan\n"+
                "===================================";


        return result;
    }


}
